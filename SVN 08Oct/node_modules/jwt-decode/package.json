{
  "_args": [
    [
      {
        "raw": "jwt-decode",
        "scope": null,
        "escapedName": "jwt-decode",
        "name": "jwt-decode",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\new\\HME_MobileApp"
    ]
  ],
  "_from": "jwt-decode@latest",
  "_id": "jwt-decode@2.2.0",
  "_inCache": true,
  "_location": "/jwt-decode",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/jwt-decode-2.2.0.tgz_1490014194946_0.9756285704206675"
  },
  "_npmUser": {
    "name": "jfromaniello",
    "email": "jfromaniello@gmail.com"
  },
  "_npmVersion": "2.15.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jwt-decode",
    "scope": null,
    "escapedName": "jwt-decode",
    "name": "jwt-decode",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jwt-decode/-/jwt-decode-2.2.0.tgz",
  "_shasum": "7d86bd56679f58ce6a84704a657dd392bba81a79",
  "_shrinkwrap": null,
  "_spec": "jwt-decode",
  "_where": "D:\\new\\HME_MobileApp",
  "author": {
    "name": "Jose F. Romaniello",
    "email": "jfromaniello@gmail.com",
    "url": "http://joseoncode.com"
  },
  "bugs": {
    "url": "https://github.com/auth0/jwt-decode/issues"
  },
  "dependencies": {},
  "description": "Decode JWT tokens, mostly useful for browser applications.",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "grunt": "~0.4.0",
    "grunt-browserify": "~5.0.0",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-connect": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-uglify": "~0.2.4",
    "grunt-contrib-watch": "~0.2.0",
    "grunt-exec": "~0.4.2",
    "grunt-s3": "~0.2.0-alpha.3",
    "mocha": "~1.13.0",
    "rimraf": "~2.2.2",
    "testem": "~0.5.8",
    "uglify-js": "~2.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7d86bd56679f58ce6a84704a657dd392bba81a79",
    "tarball": "https://registry.npmjs.org/jwt-decode/-/jwt-decode-2.2.0.tgz"
  },
  "gitHead": "2908c42a5ac806a294395022e2d94844a129c64e",
  "homepage": "https://github.com/auth0/jwt-decode#readme",
  "keywords": [
    "jwt",
    "browser"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "jfromaniello",
      "email": "jfromaniello@gmail.com"
    }
  ],
  "name": "jwt-decode",
  "optionalDependencies": {},
  "readme": "__jwt-decode__ is a small browser library that helps decoding JWTs token which are Base64Url encoded.\n\n__IMPORTANT:__ This library doesn't validate the token, any well formed JWT can be decoded. You should validate the token in your server-side logic by using something like [express-jwt](https://github.com/auth0/express-jwt), [koa-jwt](https://github.com/stiang/koa-jwt), [Owin Bearer JWT](https://github.com/michaelnoonan/Auth0-Owin-JwtBearerAuthentication), etc.\n\n## Installation\n\nInstall with npm, bower, or downloading from the build directory of this repository.\n\nUse with AMD, browserify or just include with an script tag.\n\n## Usage\n\n~~~javascript\nvar token = 'eyJ0eXAiO.../// jwt token';\n\nvar decoded = jwt_decode(token);\nconsole.log(decoded);\n\n/* prints:\n * { foo: \"bar\",\n *   exp: 1393286893,\n *   iat: 1393268893  }\n */\n~~~\n\n**Note:** A falsy token will throw an error.\n\nCan also be used with [browserify] or [webpack] by doing `npm install jwt-decode` and requiring:\n\n~~~javascript\nvar jwtDecode = require('jwt-decode');\n~~~\n\n## Polymer Web Component\n\nCan also be installed and used with [Polymer-based wrapper](https://github.com/firmfirm/f-jwt-decode).\n\n## Develop\n\nRun `grunt dev` and fire a browser at http://localhost:9999/test_harness.html.\n\n## Issue Reporting\n\nIf you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n## Author\n\n[Auth0](https://auth0.com)\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE.txt) file for more info.\n\n[browserify]: http://browserify.org\n[webpack]: http://webpack.github.io/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/auth0/jwt-decode.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "2.2.0"
}
