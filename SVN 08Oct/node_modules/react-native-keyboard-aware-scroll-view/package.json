{
  "_args": [
    [
      {
        "raw": "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
        "scope": null,
        "escapedName": "react-native-keyboard-aware-scroll-view",
        "name": "react-native-keyboard-aware-scroll-view",
        "rawSpec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
        "spec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:GeekyAnts/react-native-keyboard-aware-scroll-view.git",
          "sshUrl": "git+ssh://git@github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
          "httpsUrl": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
          "gitUrl": "git://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
          "shortcut": "github:GeekyAnts/react-native-keyboard-aware-scroll-view",
          "directUrl": "https://raw.githubusercontent.com/GeekyAnts/react-native-keyboard-aware-scroll-view/master/package.json"
        }
      },
      "D:\\new\\HME_MobileApp\\node_modules\\native-base"
    ]
  ],
  "_from": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
  "_id": "react-native-keyboard-aware-scroll-view@0.2.9",
  "_inCache": true,
  "_location": "/react-native-keyboard-aware-scroll-view",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "scope": null,
    "escapedName": "react-native-keyboard-aware-scroll-view",
    "name": "react-native-keyboard-aware-scroll-view",
    "rawSpec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "spec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "sshUrl": "git+ssh://git@github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "httpsUrl": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "gitUrl": "git://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "shortcut": "github:GeekyAnts/react-native-keyboard-aware-scroll-view",
      "directUrl": "https://raw.githubusercontent.com/GeekyAnts/react-native-keyboard-aware-scroll-view/master/package.json"
    }
  },
  "_requiredBy": [
    "/native-base"
  ],
  "_resolved": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git#f4805f254d6cc8e3329f5fb224944401f66655db",
  "_shasum": "913d8cf3213badc1b8c9a79b762b307651d9694e",
  "_shrinkwrap": null,
  "_spec": "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
  "_where": "D:\\new\\HME_MobileApp\\node_modules\\native-base",
  "author": {
    "name": "Alvaro Medina Ballester",
    "email": "me@alvaromb.com"
  },
  "bugs": {
    "url": "https://github.com/APSL/react-native-keyboard-aware-scroll-view/issues"
  },
  "dependencies": {
    "create-react-class": "^15.6.0",
    "prop-types": "^15.5.10",
    "react-timer-mixin": "^0.13.3"
  },
  "description": "A React Native ScrollView component that resizes when the keyboard appears.",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "eslint": "^3.17.1",
    "eslint-plugin-flowtype": "^2.35.0",
    "eslint-plugin-react": "^7.1.0",
    "flow-bin": "0.47.0"
  },
  "gitHead": "f4805f254d6cc8e3329f5fb224944401f66655db",
  "homepage": "https://github.com/APSL/react-native-keyboard-aware-scroll-view#readme",
  "keywords": [
    "react",
    "react-native",
    "scrollview",
    "keyboard",
    "ios",
    "android",
    "react-component"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "react-native-keyboard-aware-scroll-view",
  "optionalDependencies": {},
  "readme": "# react-native-keyboard-aware-scroll-view\r\n\r\n<p>\r\n<img src=\"https://travis-ci.org/APSL/react-native-keyboard-aware-scroll-view.svg?branch=master\" />\r\n<img src=\"https://img.shields.io/npm/dm/react-native-keyboard-aware-scroll-view.svg\" />\r\n<img src=\"https://img.shields.io/npm/dt/react-native-keyboard-aware-scroll-view.svg\" />\r\n</p>\r\n\r\nA ScrollView component that handles keyboard appearance and automatically scrolls to focused `TextInput`.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://raw.githubusercontent.com/wiki/APSL/react-native-keyboard-aware-scroll-view/kasv.gif\" alt=\"Scroll demo\" width=\"400\">\r\n</p>\r\n\r\n## Supported versions\r\n- `v0.2.0` requires `RN>=0.32.0`.\r\n- `v0.1.2` requires `RN>=0.27.2` but you should use `0.2.0` in order to make it work with multiple scroll views.\r\n- `v0.0.7` requires `react-native>=0.25.0`.\r\n- Use `v0.0.6` for older RN versions.\r\n\r\n## Installation\r\nInstallation can be done through ``npm``:\r\n\r\n```shell\r\nnpm i react-native-keyboard-aware-scroll-view --save\r\n```\r\n\r\n## Usage\r\nYou can use the ``KeyboardAwareScrollView`` or the ``KeyboardAwareListView``\r\ncomponents. Both accept ``ScrollView`` and ``ListView`` default props and\r\nimplements a custom ``KeyboardAwareMixin`` to handle keyboard appearance.\r\nThe mixin is also available if you want to use it in any other component.\r\n\r\nImport ``react-native-keyboard-aware-scroll-view`` and wrap your content inside\r\nit:\r\n\r\n```js\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n```\r\n\r\n```jsx\r\n<KeyboardAwareScrollView>\r\n  <View>\r\n    <TextInput />\r\n  </View>\r\n</KeyboardAwareScrollView>\r\n```\r\n\r\n## Auto-scroll in `TextInput` fields\r\nAs of `v0.1.0`, the component auto scrolls to the focused `TextInput` ðŸ˜Ž. For versions `v0.0.7` and older you can do the following.\r\n\r\n### Programatically scroll to any `TextInput`\r\nIn order to scroll to any `TextInput` field, you can use the built-in method `scrollToFocusedInput`. Example:\r\n\r\n```js\r\n_scrollToInput (reactNode: any) {\r\n  // Add a 'scroll' ref to your ScrollView\r\n  this.refs.scroll.scrollToFocusedInput(reactNode)\r\n}\r\n```\r\n\r\n```jsx\r\n<KeyboardAwareScrollView ref='scroll'>\r\n  <View>\r\n    <TextInput onFocus={(event: Event) => {\r\n      // `bind` the function if you're using ES6 classes\r\n      this._scrollToInput(ReactNative.findNodeHandle(event.target))\r\n    }/>\r\n  </View>\r\n</KeyboardAwareScrollView>\r\n```\r\n\r\n### Programatically scroll to any position\r\nThere's another built-in function that lets you programatically scroll to any position of the scroll view:\r\n\r\n```js\r\nthis.refs.scroll.scrollToPosition(0, 0, true)\r\n```\r\n\r\n## Register to keyboard events\r\nYou can register to `ScrollViewResponder` events `onKeyboardWillShow` and `onKeyboardWillHide`:\r\n\r\n```js\r\n<KeyboardAwareScrollView\r\n  onKeyboardWillShow={(frames: Object) => {\r\n    console.log('Keyboard event', frames)\r\n  }}>\r\n  <View>\r\n    <TextInput />\r\n  </View>\r\n</KeyboardAwareScrollView>\r\n```\r\n\r\n## API\r\n### Props\r\nAll the `ScrollView`/`ListView` props will be passed.\r\n\r\n| **Prop** | **Type** | **Description** |\r\n|----------|----------|-----------------|\r\n| `viewIsInsideTabBar` | `boolean` | Adds an extra offset that represents the `TabBarIOS` height. |\r\n| `resetScrollToCoords` | `Object: {x: number, y: number}` | Coordinates that will be used to reset the scroll when the keyboard hides. |\r\n| `enableAutoAutomaticScroll` | `boolean` | When focus in `TextInput` will scroll the position, default is enabled. |\r\n| `extraHeight` | `number` | Adds an extra offset when focusing the `TextInput`s. |\r\n| `extraScrollHeight` | `number` | Adds an extra offset to the keyboard. Useful if you want to stick elements above the keyboard. |\r\n| `enableResetScrollToCoords` | `boolean` | Lets the user enable or disable automatic resetScrollToCoords. |\r\n| `keyboardOpeningTime` | `number` | Sets the delay time before scrolling to new position, default is 250 |\r\n\r\n| **Method** | **Parameter** | **Description** |\r\n|------------|---------------|-----------------|\r\n| `getScrollResponder` | `void` | Get `ScrollResponder` |\r\n| `scrollToPosition` | `x: number, y: number, animated: bool = true` | Scroll to specific position with or without animation. |\r\n| `scrollToEnd` | `animated?: bool = true` | Scroll to end with or without animation. |\r\n\r\n## License\r\n\r\nMIT.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/APSL/react-native-keyboard-aware-scroll-view.git"
  },
  "scripts": {
    "flow": "flow check",
    "lint": "eslint lib",
    "test": "npm run lint"
  },
  "tags": [
    "react",
    "react-native",
    "react-component",
    "ios",
    "android"
  ],
  "types": "index.d.ts",
  "version": "0.2.9"
}
